@model WebLogistica.Models.EnvioOut
<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <h3 class="modal-title">Detalle de Envio</h3>
        </div>

        <div class="modal-body">
            <div class="container-fluid">
                <div class="row">
                    <strong>Envio: </strong> @Html.DisplayFor(m => m.IdEnvio, new { @readonly = "readonly" })
                </div>
                <div class="row">
                    <strong>Cliente: </strong> @Html.DisplayFor(m => m.DescCliente, new { @readonly = "readonly" })
                </div>
                <div class="row">
                    <strong>Transportista: </strong> @Html.DisplayFor(m => m.DescTransportista, new { @readonly = "readonly" })
                </div>
                <div class="row">
                    <strong>Fecha Carga: </strong> @Html.DisplayFor(m => m.FechaCarga, new { @readonly = "readonly" })
                </div>
                <div class="row">
                    <strong>Fecha Envio: </strong> @Html.DisplayFor(m => m.FechaEnvio, new { @readonly = "readonly" })
                </div>
                <div class="row">
                    <strong>Observaciones: </strong> @Html.DisplayFor(m => m.Observaciones, new { @readonly = "readonly" })
                </div>
                <div class="row">
                    <strong>Coordenadas: </strong> @Html.DisplayFor(m => m.GeoLatitud, new { @readonly = "readonly" }), @Html.DisplayFor(m => m.GeoLongitud, new { @readonly = "readonly" })
                      @Html.Hidden("Latitud", @Model.GeoLatitud)
                      @Html.Hidden("Longitud", @Model.GeoLongitud)
                </div>
                <br />
                <div class="row">
                    <div id="map" class="map"></div>
                    <script type="text/javascript">
                        function sleep(time) {
                            return new Promise((resolve) => setTimeout(resolve, time));
                        }
                        sleep(500).then(() => {
                        var redrawint = Math.floor(Math.random() * 200000) + 1
                        var getRedrawInteger = function () {
                            return redrawint;
                        };
                        var incrementRedrawInteger = function () {
                            redrawint += 1;
                        };
                        // Initialize the map
                        var map = L.map('map');
                        // Get the tile layer from OpenStreetMaps
                        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?{randint}', {
                        randint: getRedrawInteger,
                        // Specify the maximum zoom of the map
                        maxZoom: 19,
                            // Set the attribution for OpenStreetMaps
                            attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                        }).addTo(map);

                        new Promise(r => setTimeout(r, 2000));

                        // Set the view of the map
                        // with the latitude, longitude and the zoom value
                        map.setView([@Model.GeoLatitud,@Model.GeoLongitud], 16);

                        // Set the map view to the user's location
                        // Uncomment below to set map according to user location
                        // map.locate({setView: true, maxZoom: 16});

                        // Show a market at the position
                        var Marker = L.marker([@Model.GeoLatitud,@Model.GeoLongitud]).addTo(map);

                        // Bind popup to the marker with a popup
                        Marker.bindPopup("Envio " + @Model.IdEnvio).openPopup();
                        });
                    </script>
                </div>
            </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
</div>

